#spring.mvc.view.prefix = /WEB-INF/views/
#spring.mvc.view.suffix = .jsp
#spring.mvc.static-path-pattern=/resources/**
jspView.prefix=/WEB-INF/viewJsp/
jspView.suffix=.jsp
view.prefix=classpath:/static/views/
view.suffix=.html
user.password=kumar123
user.username=root
server.port=8080
#spring.datasource.jndi-name=java:comp/env/jdbc/UsersDB
#spring.thymeleaf.prefix=classpath:/templates/views/
#server.error.whitelabel.enabled=false

# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/MyKeystore.pkcs12
# The password used to generate the certificate
server.ssl.key-store-password=test123
# The alias mapped to the certificate
server.ssl.key-alias=test
security.require-ssl=true

spring.security.user.name=abhi123
spring.security.user.password=kumar123

keycloak.realm = demo
keycloak.auth-server-url = http://127.0.0.1:8080/auth/
#keycloak.bearer-only=true
keycloak.ssl-required = all
keycloak.resource = posting-application
keycloak.public-client=true
#keycloak.credentials.secret = c187b96e-523f-4ddb-ade2-e304f4c1c564
#keycloak.use-resource-role-mappings = true
#keytool.enable-basic-auth=true


keycloak.securityConstraints[0].authRoles[0]=new_user
#keycloak.securityConstraints[0].authRoles[1]=old_user
keycloak.securityConstraints[0].securityCollections[0].name=new_user resource
keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/register

keycloak.securityConstraints[1].authRoles[0]=old_user
keycloak.securityConstraints[1].securityCollections[0].name=old_user resource
keycloak.securityConstraints[1].securityCollections[0].patterns[0]=/login
